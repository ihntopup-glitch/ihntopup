
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    function isAdmin() {
      // Check if the user is an admin by reading their user document.
      // This is secure because read access to one's own user doc is granted.
      // For cross-user checks, this would need rules on the users collection.
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // USER DATA
    match /users/{userId} {
      allow read; // Allow any user to read any other user's profile for now.
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if isOwner(userId) || isAdmin();
      
      // Subcollections for user-specific data
      match /transactions/{transactionId} {
        allow read, write: if isOwner(userId) || isAdmin();
      }

      match /coupons/{userCouponId} {
        allow read, write: if isOwner(userId) || isAdmin();
      }
    }

    // ORDERS
    match /orders/{orderId} {
      // Users can read/update their own orders. Admins can read/update any order.
      allow read, update: if isOwner(request.resource.data.userId) || isAdmin();
      // Any authenticated user can create an order for themselves.
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    // PUBLICLY READABLE DATA
    match /categories/{categoryId} {
      allow read;
      allow write: if isAdmin();
    }

    match /top_up_cards/{cardId} {
      allow read;
      // Allow authenticated users to update ONLY the stockSoldCount.
      allow update: if request.auth != null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['options']);
      allow write: if isAdmin(); // Admins have full write access
    }

    match /coupons/{couponId} {
      allow read;
      allow write: if isAdmin();
    }
    
    match /banners/{bannerId} {
        allow read;
        allow write: if isAdmin();
    }

    match /notices/{noticeId} {
        allow read;
        allow write: if isAdmin();
    }

    match /payment_methods/{methodId} {
        allow read;
        allow write: if isAdmin();
    }
    
     match /wallet_top_up_requests/{requestId} {
        allow read: if isOwner(request.resource.data.userId) || isAdmin();
        allow create: if request.auth != null;
        allow update: if isAdmin();
     }


    // SETTINGS (Admin only)
    match /settings/{docId} {
      allow read, write: if isAdmin();
    }
  }
}
