{
  "entities": {
    "User": {
      "title": "User",
      "type": "object",
      "description": "Represents a user in the IHN TopUp application.",
      "properties": {
        "id": { "type": "string", "description": "Unique identifier for the user." },
        "name": { "type": "string", "description": "User's full name." },
        "email": { "type": "string", "description": "User's email address.", "format": "email" },
        "phone": { "type": "string", "description": "User's phone number." },
        "savedGameUids": { "type": "array", "description": "Array of saved game UIDs for the user.", "items": { "type": "string" } },
        "walletBalance": { "type": "number", "description": "User's current wallet balance." },
        "referralCode": { "type": "string", "description": "Unique referral code for the user." },
        "isVerified": { "type": "boolean", "description": "Indicates if the user's account is verified." },
        "isAdmin": { "type": "boolean", "description": "Indicates if the user has admin privileges." }
      },
      "required": ["id", "name", "email"]
    },
    "TopUpCard": {
      "title": "TopUpCard",
      "type": "object",
      "description": "Represents a top-up card for a specific game or service.",
      "properties": {
        "id": { "type": "string", "description": "Unique identifier for the top-up card." },
        "categoryId": { "type": "string", "description": "Reference to Category." },
        "name": { "type": "string", "description": "Name of the top-up card (e.g., Free Fire Diamonds)." },
        "description": { "type": "string", "description": "Detailed description of the top-up card." },
        "imageUrl": { "type": "string", "description": "URL of the image for the top-up card.", "format": "uri" },
        "price": { "type": "number", "description": "Price of the top-up card." },
        "gameUidFormat": { "type": "string", "description": "Format or validation rules for the Game UID" }
      },
      "required": ["id", "categoryId", "name", "price"]
    },
    "Category": {
      "title": "Category",
      "type": "object",
      "description": "Represents a category of top-up cards (e.g., Discount Offers, Regular TopUp).",
      "properties": {
        "id": { "type": "string", "description": "Unique identifier for the category." },
        "name": { "type": "string", "description": "Name of the category." },
        "description": { "type": "string", "description": "Description of the category." },
        "imageUrl": { "type": "string", "description": "URL of the image for the category.", "format": "uri" }
      },
      "required": ["id", "name"]
    },
    "Order": {
      "title": "Order",
      "type": "object",
      "description": "Represents an order placed by a user.",
      "properties": {
        "id": { "type": "string", "description": "Unique identifier for the order." },
        "userId": { "type": "string", "description": "Reference to User." },
        "topUpCardId": { "type": "string", "description": "Reference to TopUpCard." },
        "quantity": { "type": "number", "description": "Quantity of the top-up card ordered." },
        "gameUid": { "type": "string", "description": "Game UID provided by the user for the order." },
        "paymentMethod": { "type": "string", "description": "Payment method used for the order." },
        "couponId": { "type": "string", "description": "Reference to Coupon." },
        "totalAmount": { "type": "number", "description": "Total amount of the order after applying discounts." },
        "orderDate": { "type": "string", "description": "Date and time when the order was placed.", "format": "date-time" },
        "status": { "type": "string", "description": "Status of the order (e.g., Pending, Completed, Failed)." }
      },
      "required": ["id", "userId", "topUpCardId", "quantity", "gameUid", "paymentMethod", "totalAmount", "orderDate", "status"]
    },
    "Coupon": {
      "title": "Coupon",
      "type": "object",
      "description": "Represents a discount coupon.",
      "properties": {
        "id": { "type": "string", "description": "Unique identifier for the coupon." },
        "code": { "type": "string", "description": "Coupon code." },
        "type": { "type": "string", "description": "Type of discount (e.g., Percentage, Fixed Amount)." },
        "value": { "type": "number", "description": "Discount value." },
        "minPurchaseAmount": { "type": "number" "description": "Minimum purchase amount." },
        "expiryDate": { "type": "string", "description": "Date when the coupon expires.", "format": "date-time" },
        "usageLimitPerUser": { "type": "number", "description": "Max usage per user." },
        "categoryIds": { "type": "array", "description": "Applicable category IDs.", "items": { "type": "string" } }
      },
      "required": ["id", "code", "type", "value", "expiryDate"]
    },
    "UserCoupon": {
      "title": "UserCoupon",
      "type": "object",
      "description": "Represents a coupon owned by a user. This schema defines the structure of a coupon document within a user's `coupons` subcollection. Security rules will ensure that only the owner can read or write their own coupons, including listing them.",
      "properties": {
        "code": { "type": "string", "description": "The coupon code." },
        "description": { "type": "string", "description": "A description of the coupon and its benefits." },
        "acquiredDate": { "type": "string", "description": "Date the user acquired the coupon.", "format": "date-time" }
      },
      "required": ["code", "description", "acquiredDate"]
    },
    "Referral": {
      "title": "Referral",
      "type": "object",
      "description": "Represents a referral relationship.",
      "properties": {
        "id": { "type": "string", "description": "Unique identifier for the referral." },
        "referrerId": { "type": "string", "description": "ID of the referring user." },
        "refereeId": { "type": "string", "description": "ID of the referred user." },
        "referralDate": { "type": "string", "description": "Date of referral.", "format": "date-time" },
        "bonusEarnedReferrer": { "type": "number", "description": "Bonus earned by referrer." },
        "bonusEarnedReferee": { "type": "number", "description": "Bonus earned by referee." },
        "isFirstOrderComplete": { "type": "boolean", "description": "If referee completed first order." }
      },
      "required": ["id", "referrerId", "refereeId", "referralDate"]
    },
    "Banner": {
      "title": "Banner",
      "type": "object",
      "description": "Represents a promotional banner.",
      "properties": {
        "id": { "type": "string", "description": "Unique identifier for the banner." },
        "imageUrl": { "type": "string", "description": "URL of the banner image.", "format": "uri" },
        "linkUrl": { "type": "string", "description": "URL the banner links to.", "format": "uri" },
        "startDate": { "type": "string", "description": "Banner start date.", "format": "date-time" },
        "endDate": { "type": "string", "description": "Banner end date.", "format": "date-time" },
        "isActive": { "type": "boolean", "description": "If the banner is active." }
      },
      "required": ["id", "imageUrl", "linkUrl", "startDate", "endDate", "isActive"]
    },
    "Transaction": {
      "title": "Transaction",
      "type": "object",
      "description": "Represents a wallet transaction.",
      "properties": {
        "id": { "type": "string", "description": "Unique identifier for the transaction." },
        "userId": { "type": "string", "description": "ID of the user." },
        "type": { "type": "string", "description": "Type of transaction (e.g., Deposit, Deduction, Refund)." },
        "amount": { "type": "number", "description": "Transaction amount." },
        "transactionDate": { "type": "string", "description": "Date of transaction.", "format": "date-time" },
        "status": { "type": "string", "description": "Transaction status (e.g., Pending, Completed, Failed)." },
        "paymentMethod": { "type": "string", "description": "Payment method used." }
      },
      "required": ["id", "userId", "type", "amount", "transactionDate", "status", "paymentMethod"]
    },
    "SupportTicket": {
      "title": "SupportTicket",
      "type": "object",
      "description": "Represents a user's support request or ticket.",
      "properties": {
        "id": { "type": "string", "description": "Unique identifier for the support ticket." },
        "userId": { "type": "string", "description": "ID of the user who created the ticket." },
        "userEmail": { "type": "string", "description": "Email of the user.", "format": "email" },
        "subject": { "type": "string", "description": "The subject of the support ticket." },
        "message": { "type": "string", "description": "The main content of the user's request." },
        "status": { "type": "string", "description": "Current status of the ticket (e.g., Open, In Progress, Closed).", "enum": ["Open", "In Progress", "Closed"] },
        "createdAt": { "type": "string", "description": "Date and time when the ticket was created.", "format": "date-time" },
        "updatedAt": { "type": "string", "description": "Date and time when the ticket was last updated.", "format": "date-time" }
      },
      "required": ["id", "userId", "userEmail", "subject", "message", "status", "createdAt"]
    }
  },
  "auth": {
    "providers": ["password", "anonymous", "google.com"]
  },
  "firestore": {
    "/users/{userId}": {
      "schema": { "$ref": "#/entities/User" },
      "description": "Stores user profiles. Path-based ownership ensures only the user can access their own profile data."
    },
    "/users/{userId}/orders/{orderId}": {
      "schema": { "$ref": "#/entities/Order" },
      "description": "Stores orders placed by a specific user. Path-based ownership ensures only the user can access their order history."
    },
    "/users/{userId}/transactions/{transactionId}": {
      "schema": { "$ref": "#/entities/Transaction" },
      "description": "Stores transaction history for a specific user. Path-based ownership ensures only the user can access their transaction details."
    },
    "/users/{userId}/coupons/{userCouponId}": {
      "schema": { "$ref": "#/entities/UserCoupon" },
      "description": "Stores coupons owned by a specific user. Path-based ownership ensures only the user can access their own coupons, including listing them."
    },
    "/categories/{categoryId}": {
      "schema": { "$ref": "#/entities/Category" },
      "description": "Stores categories of top-up cards. Publicly readable."
    },
    "/top_up_cards/{topUpCardId}": {
      "schema": { "$ref": "#/entities/TopUpCard" },
      "description": "Stores top-up card information. Publicly readable."
    },
    "/coupons/{couponId}": {
      "schema": { "$ref": "#/entities/Coupon" },
      "description": "Stores coupon information. Publicly readable."
    },
    "/referrals/{referralId}": {
      "schema": { "$ref": "#/entities/Referral" },
      "description": "Stores referral information."
    },
    "/banners/{bannerId}": {
      "schema": { "$ref": "#/entities/Banner" },
      "description": "Stores banner information for promotional purposes."
    },
    "/support_tickets/{ticketId}": {
      "schema": { "$ref": "#/entities/SupportTicket" },
      "description": "Stores all user support tickets. Readable by admins."
    }
  }
}
